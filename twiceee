import pygame
pygame.init()

screenHeight = 411
screenWidth = 1200
win = pygame.display.set_mode((screenWidth, screenHeight))

pygame.display.set_caption("Soon to be Twice")


bus = [pygame.image.load('pxlBus/pxl_bus1.png'),pygame.image.load('pxlBus/pxl_bus2.png'),pygame.image.load('pxlBus/pxl_bus3.png'),pygame.image.load('pxlBus/pxl_bus4.png'),pygame.image.load('pxlBus/pxl_bus5.png'),pygame.image.load('pxlBus/pxl_bus6.png'),pygame.image.load('pxlBus/pxl_bus6.png'),pygame.image.load('pxlBus/pxl_bus7.png'),pygame.image.load('pxlBus/pxl_bus8.png')]
walkRight = [pygame.image.load('TzuyuJelly/TSR1.png'), pygame.image.load('TzuyuJelly/TSR2.png'), pygame.image.load('TzuyuJelly/TSR3.png'), pygame.image.load('TzuyuJelly/TSR4.png'), pygame.image.load('TzuyuJelly/TSR5.png'), pygame.image.load('TzuyuJelly/TSR6.png'), pygame.image.load('TzuyuJelly/TSR7.png'), pygame.image.load('TzuyuJelly/TSR8.png')]
walkLeft = [pygame.image.load('TzuyuJelly/TSL1.png'), pygame.image.load('TzuyuJelly/TSL2.png'), pygame.image.load('TzuyuJelly/TSL3.png'), pygame.image.load('TzuyuJelly/TSL4.png'), pygame.image.load('TzuyuJelly/TSL5.png'), pygame.image.load('TzuyuJelly/TSL6.png'), pygame.image.load('TzuyuJelly/TSL7.png'), pygame.image.load('TzuyuJelly/TSL8.png')]
bg = pygame.image.load('Carnival.png')
heart = pygame.image.load('pxlHeart.png')

clock = pygame.time.Clock()

class player(object):
    def __init__(self,x,y,width,height):
        self.x = x
        self.y = y
        self.width = width
        self.height = height
        self.isJump = False
        self.jumpCount = 10
        self.vel = 5
        self.left = False
        self.right = False
        self.walkCount = 0
        self.standing = True
        self.health = 10
        self.hitbox = (self.x, self.y, 29, 52)
        
    def draw(self,win):
        if self.walkCount + 1 >= 24:
            self.walkCount = 0

        if not(self.standing):
            if self.right:
                win.blit(walkRight[self.walkCount//3], (self.x, self.y))
                self.walkCount += 1
            elif self.left:
                win.blit(walkLeft[self.walkCount//3], (self.x, self.y))
                self.walkCount += 1
            
        else:
            if self.left:
                win.blit(walkLeft[0],(self.x, self.y))
            else:
                win.blit(walkRight[0],(self.x, self.y))
        self.hitbox = (self.x + 17, self.y + 11, 29, 52)
        pygame.draw.rect(win, (255,0,0), self.hitbox,2)
    def hit(self):
        print('hit')
        pass

class projectile(object):
    def __init__(self,x,y,facing):
        self.x = x
        self.y = y
        self.facing = facing
        self.vel = 20 * facing

    def draw(self,win):
        
        win.blit(heart,(self.x,self.y))
        
class enemy(object):
    walkRight = [pygame.image.load('Zombies/ZOMR1.png'), pygame.image.load('Zombies/ZOMR2.png'), pygame.image.load('Zombies/ZOMR3.png'), pygame.image.load('Zombies/ZOMR4.png'), pygame.image.load('Zombies/ZOMR5.png'), pygame.image.load('Zombies/ZOMR6.png'), pygame.image.load('Zombies/ZOMR7.png'), pygame.image.load('Zombies/ZOMR8.png')]
   
    walkLeft = [pygame.image.load('Zombies/ZOML1.png'), pygame.image.load('Zombies/ZOML2.png'), pygame.image.load('Zombies/ZOML3.png'), pygame.image.load('Zombies/ZOML4.png'), pygame.image.load('Zombies/ZOML5.png'), pygame.image.load('Zombies/ZOML6.png'), pygame.image.load('Zombies/ZOML7.png'), pygame.image.load('Zombies/ZOML8.png')]
   
    def __init__(self, x, y, width, height, end):
        self.x = x
        self.y = y
        self.width = width
        self.height = height
        self.path = [x, end]
        self.walkCount = 0
        self.vel = 3
        self.health = 2
        self.visible = True
        self.hitbox = (self.x + 17, self.y + 2, 31, 57)

    
    def draw(self, win):
        self.move()
        if self.visible:
            if self.walkCount + 1 >= 24:
                self.walkCount = 0
                
            if self.vel > 0:
                win.blit(self.walkRight[self.walkCount//3], (self.x, self.y))
                self.walkCount += 1
            else:
                win.blit(self.walkLeft[self.walkCount//3], (self.x, self.y))
                self.walkCount += 1

        pygame.draw.rect(win, (255, 0, 0),(self.hitbox[0], self.hitbox[1], 50, 10))
        pygame.draw.rect(win, (0, 255, 0),(self.hitbox[0], self.hitbox[1], 50 - (50/3*(3 - self.health)), 10))
        self.hitbox = (self.x + 17, self.y + 2, 31, 57)
        pygame.draw.rect(win, (255,0,0), self.hitbox,2)
        
    def move(self):
        if self.vel > 0:
            if self.x + self.vel< self.path[1]:
                self.x += self.vel
            else:
                self.vel = self.vel * -1
                self.x += self.vel
                self.walkCount = 0
        else:
            if self.x > self.path[0] - self.vel:
                self.x += self.vel
            else:
                self.vel = self.vel * -1
                self.x += self.vel
                self.walkCount = 0

    def hit(self):
        if self.health > 0:
            self.health -= 1
        else:
            self.visible = False
        print('hit')
        

class busAnimate(object):

    def __init__(self, x, y, width, height):
        self.x = x
        self.y = y
        self.width = width
        self.height = height
        self.picCount = 0

    def drawBus(self,win):
        if self.picCount <= 8:
            win.blit(bus[self.picCount],(self.x,self.y))
            self.picCount += 1
        else:
            win.blit(bus[8],(self.x,self.y))
            
def redrawGameWindow():
    
    win.blit(bg,(0,0))
    
    openBus.drawBus(win)
    man.draw(win)
    monster.draw(win)
    for bullet in bullets:
        bullet.draw(win)
    pygame.display.update()


    
bullets = []
man = player(140, 250, 96, 207)
monster = enemy(400, 250, 64, 64, 700)
openBus = busAnimate(20, 120, 296, 272)
shootCount = 0
run = True
while run:
    clock.tick(24)

    if monster.visible == True:
        if man.hitbox[1] < monster.hitbox[1] + monster.hitbox[3] and man.hitbox[1] + man.hitbox[3] > monster.hitbox[1]:
            if man.hitbox[0] + man.hitbox[2] > monster.hitbox[0] and man.hitbox[0] < monster.hitbox[0] + monster.hitbox[2]:
                man.hit()
    
    if shootCount > 0:
        shootCount += 1
    if shootCount > 3:
        shootCount = 0
    
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False

    for bullet in bullets:
        if bullet.y - 21 < monster.hitbox[1] + monster.hitbox[3] and bullet.y + 21 > monster.hitbox[1]:
            if bullet.x + 21 > monster.hitbox[0] and bullet.x - 21 < monster.hitbox[0] + monster.hitbox[2]:
                monster.hit()
                
        if bullet.x < screenWidth and bullet.x > 0:
            bullet.x += bullet.vel
        else:
            bullets.pop(bullets.index(bullet))
    
   
    keys = pygame.key.get_pressed()

    if keys[pygame.K_SPACE] and shootCount == 0:
        if man.left:
            facing = -1
        else:
            facing = 1
        if len(bullets) < 8:
            bullets.append(projectile(round(man.x + man.width //2), round(man.y + man.height *.25), facing))

        shootCount = 1
        
    if keys[pygame.K_LEFT] and man.x > man.vel:
        man.x -= man.vel
        man.left = True
        man.right =False
        man.standing = False
    elif keys[pygame.K_RIGHT] and man.x < screenWidth - man.width - man.vel:
        man.x += man.vel
        man.left = False
        man.right = True
        man.standing = False
    else:
        man.standing = True
        man.walkCount = 0
    if not(man.isJump):
        if keys[pygame.K_UP]:
            man.isJump = True
            man.walkCount = 0
    else:
        if man.jumpCount >= -10:
            neg = 1
            if man.jumpCount < 0:
                neg = -1
            man.y -= (man.jumpCount ** 2)*0.3 * neg
            man.jumpCount -= 1
        else:
            man.isJump = False
            man.jumpCount = 10

    redrawGameWindow()   

pygame.quit()
